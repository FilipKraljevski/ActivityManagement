@model ActivityManagement.Repository.PaginatedList<Activity> 

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

    <div class="row">
        <div class="col">
            <form asp-controller="Activity" asp-action="Index" method="get">
                <div class="form-group">
                    <label class="control-label">Search by Date From</label>
                    <input class="form-control" type="date" name="from" required/>
                </div>
                <div class="form-group">
                    <label class="control-label">Search by Date To</label>
                    <input class="form-control" type="date" name="to" required/>
                </div>
                <button type="submit" class="btn btn-outline-primary">Search</button>
            </form>
        </div>

        <div class="col">
            <form asp-controller="Activity" asp-action="PrintReport">
                <div class="form-group">
                    <label class="control-label">Export by Date From</label>
                    <input class="form-control" type="date" name="from" required/>
                </div>
                <div class="form-group">
                    <label class="control-label">Export by Date To</label>
                    <input class="form-control" type="date" name="to" required/>
                </div>
                <button type="submit" class="btn btn-outline-primary">Export</button>
            </form>
        </div>
    </div>

    <div class="row mt-2">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Description</th>
                    <th>Time Spent</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i< Model.Count(); i++)
                {
                    var item = Model[i];
                    <tr>
                        <td>@item.Date</td>
                        <td>@item.Description</td>
                        <td>@item.TimeSpent</td>
                    </tr>
                }
            </tbody>
        </table>
        <div>
            <a asp-action="ResetFilter" class="btn btn-danger">Reset Filter by Date</a>
        </div>
    </div>

    <div class="row">
        <div class="col mt-5">
            <a class="btn btn-success" asp-action="Create">Insert New Activity</a>
        </div>
        <div class="col">
            <form asp-controller="Activity" asp-action="SendEmail">
                <div class="form-group">
                    <label class="control-label">Send this report</label>
                    <input class="form-control" type="email" name="toEmail" required placeholder="username@mail.com"/>
                </div>
                <button type="submit" class="btn btn-outline-primary">Send</button>
            </form>
        </div>
    </div>

    <div class="row">
        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            int pi = 1;
            int count = 0;
            if(Model.TotalPages > 10){
                if(Model.TotalPages - Model.PageIndex < 10)
                {
                    int tmp = 10 - ((Model.TotalPages - Model.PageIndex) + 1);
                    pi = Model.PageIndex - tmp;
                }
                else
                {
                    pi = Model.PageIndex;
                }
            }
        }

        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           class="btn btn-default @prevDisabled">
            Previous
        </a>

        @for (; pi<= Model.TotalPages; pi++)
        {
            if(count == 10)
            {
                break;
            }
            if(Model.PageIndex == pi)
            {
                <a asp-action="Index"
                   asp-route-pageNumber="@(pi)"
                   class="btn btn-default btn-outline-secondary">
                    @(pi)
                </a>
            }
            if(Model.PageIndex != pi)
            {
                <a asp-action="Index"
                   asp-route-pageNumber="@(pi)"
                   class="btn btn-default">
                    @(pi)
                </a>
            }
            count++;
        }
        <a asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           class="btn btn-default @nextDisabled">
            Next
        </a>
    </div>
</div>
